rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own student documents
    match /students/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read and write their own faculty documents
    match /faculty/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Course access rules
    match /courses/{courseId} {
      allow read: if true;
      allow write: if request.auth != null && 
                   (resource == null || resource.data.facultyId == request.auth.uid);
    }
    
    // Quiz access rules
    match /quizzes/{quizId} {
      allow read: if true;
      allow create: if request.auth != null && 
                   request.resource.data.facultyId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                           resource.data.facultyId == request.auth.uid;
      
      // Questions subcollection rules
      match /questions/{questionId} {
        allow read: if true;
        allow create: if request.auth != null && 
                      get(/databases/$(database)/documents/quizzes/$(quizId)).data.facultyId == request.auth.uid;
        allow update, delete: if false; // Questions should be immutable after creation
      }
    }
    
    // Quiz results access rules
    match /quizResults/{resultId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                   request.resource.data.studentId == request.auth.uid;
      allow update, delete: if false; // Results should be immutable after creation
    }
    
    // Admin-only collections
    match /disciplinaryActions/{actionId} {
      allow read: if request.auth != null;
      allow write: if request.auth.token.admin == true; // Requires custom claims
    }
    
    // Student data access for faculty/admin
    match /students/{studentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == studentId;
    }
    
    // Faculty data access
    match /faculty/{facultyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == facultyId;
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}