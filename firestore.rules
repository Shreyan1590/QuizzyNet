rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Courses - Faculty can manage their own, Students can read enrolled courses
    match /courses/{courseId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.facultyId || 
                   request.auth.token.get('role') == 'student' && 
                   resource.data.enrolledStudents.hasAny([request.auth.uid]));
      
      allow create, update, delete: if request.auth != null && 
                                    request.auth.uid == resource.data.facultyId;
    }

    // Quizzes - Faculty can manage, Students can access if enrolled in course
    match /quizzes/{quizId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.facultyId || 
                   (request.auth.token.get('role') == 'student' && 
                    exists(/databases/$(database)/documents/courses/$(resource.data.courseId)) && 
                    get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.enrolledStudents.hasAny([request.auth.uid])));
      
      allow create, update, delete: if request.auth != null && 
                                    request.auth.uid == resource.data.facultyId;
    }

    // Quiz Results - Students can see their own, Faculty can see their students'
    match /quizResults/{resultId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == resource.data.studentId || 
                   request.auth.uid == resource.data.facultyId);
      
      allow create: if request.auth != null && 
                    request.auth.uid == request.resource.data.studentId && 
                    exists(/databases/$(database)/documents/quizzes/$(request.resource.data.quizId));
      
      allow update, delete: if false; // Results are immutable
    }

    // Student Profiles
    match /students/{studentId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == studentId || 
                   request.auth.token.get('role') == 'faculty');
      
      allow update: if request.auth != null && 
                     request.auth.uid == studentId;
    }

    // Faculty Profiles
    match /faculty/{facultyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.auth.uid == facultyId;
    }

    // Subject Categories (read-only for all)
    match /subjectCategories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.auth.token.get('admin') == true;
    }

    // Default deny all others
    match /{document=**} {
      allow read, write: if false;
    }
  }
}